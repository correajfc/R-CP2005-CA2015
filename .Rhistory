library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
# library(pander)
#library(stargazer)
#library(stargazer)
#  correr los script en el orden correcto para realizar todos los calculos
source("funciones.R")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
fitstats_lm_df(lm.area_ep.ptje)
fitstats_lm_df(lm.area_ep.ptje) %>%
rename(`Todas las variables`=fitstats) %>%
left_join(fitstats_lm_df(lm.area_ep.ptje.sel),by= "medidasfit") %>%
rename(`Variables seleccionadas`=fitstats)
kable(tabla,caption = "Comparación OLS de el modelos con todas las variables y el modelo simplificado", digits = 5)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
lm.ia.areas.dist
lm.ia.areas.dist.sel
summary(lm.ia.areas.dist.sel)
summary(lm.ia.areas.dist)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
fitstats_lm_df(lm.ia.areas.dist.sel)
fitstats_lm_df(lm.ia.areas.dist)
best_models<-ols_best_subset(lm(ia.areas.dist.mxn~cuarto.porcentaje.mxn+
unidad_economica.porcentaje.mxn+
area_media_manzana.mxn+
densidad_poblacion.mxn+
ningun_estudio.porcentaje.mxn+
con_alguna_limitacion.porcentaje.mxn,
data = regresion.EV.mn))
best_models
plot(best_models)
lm.ia.areas.dist.sel<-lm(ia.areas.dist.mxn~cuarto.porcentaje.mxn+
unidad_economica.porcentaje.mxn+
area_media_manzana.mxn+
#densidad_poblacion.mxn+
ningun_estudio.porcentaje.mxn+
con_alguna_limitacion.porcentaje.mxn,
data = regresion.EV.mn)
summary(lm.ia.areas.dist.sel)
AIC(lm.ia.areas.dist.sel)
AIC(lm.ia.areas.dist)
load("bck1.RData")
# Scrip principal para la la ejecución de los .R
#librerias
library(rgdal)
library(rgeos)
library(raster)
library(sp)
library(spdep)
library(car)
library(tidyverse)
library(magrittr)
library(stringr)
library(purrr)
library(reshape2)
library(broom)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
# library(pander)
#library(stargazer)
#library(stargazer)
#  correr los script en el orden correcto para realizar todos los calculos
source("funciones.R")
fitstats_lm_df(lm.ia.areas.dist) %>%
rename(`Todas las variables`=fitstats) %>%
left_join(fitstats_lm_df(lm.ia.areas.dist.sel),by= "medidasfit") %>%
rename(`Variables seleccionadas`=fitstats)
dependiente <- "ia.areas.dist"
independientes  <- independientes.EV
# max normalizado
var_names<-c(dependiente,names(regresion.EV[,independientes]))
regresion.EV.mn<-max_nomalization(regresion.EV,var_names)
lm.ia.areas.dist.sel<-lm(ia.areas.dist.mxn~cuarto.porcentaje.mxn+
unidad_economica.porcentaje.mxn+
area_media_manzana.mxn+
#densidad_poblacion.mxn+
ningun_estudio.porcentaje.mxn+
con_alguna_limitacion.porcentaje.mxn,
data = regresion.EV.mn)
fitstats_lm_df(lm.ia.areas.dist) %>%
rename(`Todas las variables`=fitstats) %>%
left_join(fitstats_lm_df(lm.ia.areas.dist.sel),by= "medidasfit") %>%
rename(`Variables seleccionadas`=fitstats)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
su.EV<-su[su$SETU_CCDGO %in% regresion.EV$SETU_CCDGO ,]
lnb.su<-poly2nb(su.EV)
W_cont.ev<-nb2listw(lnb.su, style="W", zero.policy=T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(lnb.su, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
par(mar=rep(0,4))
plot(W_cont.ev,coords=coordinates(su.EV),pch=19, cex=0.1, col="gray")
lnb.su<-poly2nb(su.EV, queen = T)
W_queen.ev<-nb2listw(lnb.su, style="W", zero.policy=T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(W_queen.ev, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
par(mar=rep(0,4))
plot(W_queen.ev,coords=coordinates(su.EV),pch=19, cex=0.1, col="gray")
coords<-coordinates(su.EV)
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W", zero.policy=T)
W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(W_dist1000.inv.ev, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
moran.test(regresion.EV$area_ep.porcentaje, listw=W_queen.ev)
moran.test(regresion.EV$ia.areas.dist, listw=W_queen.ev)
moran.test(lm.area_ep.ptje.sel$residuals, listw=W_queen.ev)
moran.test(lm.ia.areas.dist.sel$residuals, listw=W_queen.ev)
moran.test(regresion.EV$area_ep.porcentaje, listw=W_dist1000.inv.ev,zero.policy = TRUE)
moran.test(regresion.EV$area_ep.porcentaje, listw=W_queen.ev)
moran.test(regresion.EV$ia.areas.dist, listw=W_dist1000.inv.ev,zero.policy = TRUE)
moran.test(regresion.EV$ia.areas.dist, listw=W_queen.ev)
pintar_mapa_su_LISA_var(regresion.EV,"area_ep.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"ia.areas.dist",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"area_ep.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"ia.areas.dist",W_queen.ev, wname = "Wq",nrow =1)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
lm.morantest(lm.area_ep.ptje.sel, W_queen.ev, alternative="two.sided",zero.policy = T)
lm.morantest(lm.area_ep.ptje.sel, W_dist1000.inv.ev, alternative="two.sided",zero.policy = T)
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_queen.ev,
pch=16, col="grey50",
cex=.5, quiet=T,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran Wq")
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_dist1000.inv.ev,
zero.policy = TRUE,
pch=16, col="grey50",
cex=.5, quiet=T,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran Wd")
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_queen.ev,
pch=16, col="grey50",
cex=.5, quiet=T,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran Wq")
lm.morantest(lm.ia.areas.dist.sel, W_queen.ev, alternative="two.sided",zero.policy = T)
lm.morantest(lm.ia.areas.dist.sel, W_dist1000.inv.ev, alternative="two.sided",zero.policy = T)
moran.plot(lm.ia.areas.dist.sel$residuals,
listw=W_queen.ev,
pch=16, col="grey50",
cex=.5, quiet=T,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran Wq")
moran.plot(lm.ia.areas.dist.sel$residuals,
listw=W_dist1000.inv.ev,
zero.policy = TRUE,
pch=16, col="grey50",
cex=.5, quiet=T,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran Wd")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
load("bck1.RData")
# Scrip principal para la la ejecución de los .R
#librerias
library(rgdal)
library(rgeos)
library(raster)
library(sp)
library(spdep)
library(car)
library(tidyverse)
library(magrittr)
library(stringr)
library(purrr)
library(reshape2)
library(broom)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
# library(pander)
#library(stargazer)
#library(stargazer)
#  correr los script en el orden correcto para realizar todos los calculos
source("funciones.R")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
pintar_mapa_su_LISA_var(regresion.EV,"area_media_manzana",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"unidad_economica.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"cuarto.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"ningun_estudio.porcentaje",W_queen.ev, wname = "Wd",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"densidad_poblacion",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"con_alguna_limitacion.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
sem.areas_ep
sm.sem.areaep<-summary(sem.areas_ep)
t1<-summary(sem.areas_ep)$Coef
r1<-round(c(sem.areas_ep$rho,sm.sem.areaep$LR1$statistic,sm.sem.areaep$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\lambda$","Likelihood ratio","p-value"),
r1)
t1
sm.sem.areaep
sem.areas_ep$lambda
summary(sem.areas_ep)
sm.sem.areaep<-summary(sem.areas_ep)
sm.sem.areaep
sm.sem.areaep$LR1$statistic
sm.sem.areaep$LR1$p.value
sm.sem.areaep<-summary(sem.areas_ep)
t1<-summary(sem.areas_ep)$Coef
r1<-round(c(sem.areas_ep$lambda,sm.sem.areaep$LR1$statistic,sm.sem.areaep$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\lambda$","Likelihood ratio","p-value"),
r1)
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SEM de porcentaje de área de espacio verde', booktabs = TRUE)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SEM de porcentaje de área de espacio verde', booktabs = TRUE)
sm.sd.areasdist<-summary(sd.areas.dist)
t1<-summary(sd.areas.dist)$Coef
r1<-round(c(sm.sd.areasdist$rho,sm.sd.areasdist$LR1$statistic,sm.sd.areasdist$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SD del indicador de acceso área-distancia', booktabs = TRUE)
pintar_mapa_su_LISA_var(regresion.EV,"con_alguna_limitacion.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
analisis.cali.df %>% select(one_of(metricas.poblacion)) %>%
gather( key = metricas.poblacion,
value = valores,
edad_promedio:ninguno_de_los_anteriores) %>%
ggplot()+
geom_histogram(aes(x = valores),bins = 30,
color = "white", fill="magenta")+
facet_wrap(~metricas.poblacion, scales = "free", ncol = 3)
ggplot(analisis.cali.df)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = area_ep.porcentaje),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")+
ggplot(regresion.EV)+
geom_histogram(aes(x = area_ep.porcentaje),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = area_ep.porcentaje),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = area_ep.porcentaje),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = area_ep.porcentaje),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_point(aes(x = ia.areas.dist),color = "white", fill="magenta",alpha=0.1)
ggplot(regresion.EV)+
geom_point(aes(x = ia.areas.dist, y="indicador"),color = "white", fill="magenta",alpha=0.1, position ="jitter")
ggplot(regresion.EV)+
geom_point(aes(x = ia.areas.dist, y="indicador"),color = "magenta",alpha=0.1, position ="jitter")
regresion.EV %>% select(area_ep.porcentaje,ia.areas.dist) %>%
gather(key = "indicador", value=valor)%>%
ggplot()+
geom_point(aes(x = valor, y=indicador),color = c("magenta","green"),alpha=0.2, position ="jitter")
regresion.EV %>% select(area_ep.porcentaje,ia.areas.dist) %>%
gather(key = "indicador", value=valor)%>%
ggplot()+
geom_point(aes(x = valor, y=indicador, color=indicador),alpha=0.2, position ="jitter")+
scale_color_brewer()
regresion.EV %>% select(area_ep.porcentaje.mxn,ia.areas.dist.mxn) %>%
gather(key = "indicador", value=valor)%>%
ggplot()+
geom_point(aes(x = valor, y=indicador, color=indicador),alpha=0.2, position ="jitter")+
scale_color_brewer()
names(regresion.EV)
ggplot(regresion.EV)+
geom_point(aes(y = "indicador", x= area_ep.porcentaje, color="indicador"),alpha=0.2, position ="jitter")+
scale_color_brewer(type = "div")
ggplot(regresion.EV)+
geom_point(aes(y = "indicador", x= area_ep.porcentaje, color="indicador"),alpha=0.3, position ="jitter")+
scale_color_brewer(type = "div")
ggplot(regresion.EV)+
geom_point(aes(y = "indicador", x= area_ep.porcentaje), color="darkgreen",alpha=0.3, position ="jitter")+
scale_color_brewer(type = "div")
ggplot(regresion.EV)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_histogram(aes(x = area_ep.porcentaje),bins = 30,
color = "white", fill="darkgreen")
ggplot(regresion.EV)+
geom_point(aes(y = "indicador", x= area_ep.porcentaje), color="darkgreen",alpha=0.3, position ="jitter")+
scale_color_brewer(type = "div")
ggplot(regresion.EV)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_point(aes(y = "indicador", x= area_ep.porcentaje),color="magenta",alpha=0.3, position ="jitter")+
scale_color_brewer(type = "div")
ggplot(regresion.EV)+
geom_histogram(aes(x = area_ep.porcentaje),bins = 30,
color = "white", fill="darkgreen")
regresion.EV$area_calle.porcentaje[regresion.EV$area_calle.porcentaje==0]
regresion.EV$area_calle.porcentaje[regresion.EV$area_calle.porcentaje<0.01]
regresion.EV$area_calle.porcentaje
ggplot(regresion.EV)+
geom_point(aes(y = "indicador", x= area_ep.porcentaje), color="darkgreen",alpha=0.3, position ="jitter")+
scale_color_brewer(type = "div")
regresion.EV %>% filter(area_ep.porcentaje<0.05)
regresion.EV %>% select(area_ep.porcentaje) %>% filter(area_ep.porcentaje<0.5)
regresion.EV %>% select(area_ep.porcentaje) %>% filter(area_ep.porcentaje<0.05)
regresion.EV %>% select(area_ep.porcentaje) %>% filter(area_ep.porcentaje<0.05) %>% nrow()
nrow(regresion.EV)
ggplot(regresion.EV)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")
ggplot(regresion.EV)+
geom_point(aes(y = "indicador", x= ia.areas.dist),color="magenta",alpha=0.3, position ="jitter")+
scale_color_brewer(type = "div")
ggplot(regresion.EV)+
geom_point(aes(y = "indicador", x= ia.areas.dist),color="magenta",alpha=0.3, position ="jitter")+
scale_color_brewer(type = "div")
ggplot(regresion.EV)+
geom_histogram(aes(x = ia.areas.dist),bins = 30,
color = "white", fill="magenta")
sd.areas.dist
summary(sd.areas.dist)
pintar_mapa_su_LISA_var(regresion.EV,"unidad_economica.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"area_media_manzana",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"con_alguna_limitacion.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.EV,"unidad_economica.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
regresion.EV %>% filter(ia.areas.dist <0.05) %>% nrow
regresion.EV$ia.areas.dist
load("bck1.RData")
# Scrip principal para la la ejecución de los .R
#librerias
library(rgdal)
library(rgeos)
library(raster)
library(sp)
library(spdep)
library(car)
library(tidyverse)
library(magrittr)
library(stringr)
library(purrr)
library(reshape2)
library(broom)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
# library(pander)
#library(stargazer)
#library(stargazer)
#  correr los script en el orden correcto para realizar todos los calculos
source("funciones.R")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
titulo
frml
titulo<-str_c("Resúmen ajuste OLS:",frml[2],frml[1],"\n",frml[3],sep = " ")
titulo
titulo<-str_c("Resúmen ajuste OLS:",frml[2],frml[1],"\\n",frml[3],sep = " ")
kable(tabla,caption = titulo, digits = 5)
titulo
str_c("www","eeee")
str_c("www","\neeee")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
clean_book()
clean_book(TRUE)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
base_plot.manzanas2 +
geom_polygon(data = ep.cali.f ,
aes(x=long,y=lat,group=group,
fill=tolower(categoria)),
alpha=1)+
theme_void()+
scale_fill_manual(name = "Tipo EV",values = palKata[c(9,8,7,6,1,5,4,10,2,3)])
# espacios publicos (verdes)
base_plot.manzanas2 +
geom_path(data = su.f,aes(x=long,y=lat,group=group),
color="lightskyblue",
size=0.5)+
geom_polygon(data = ep.cali.f ,
aes(x=long,y=lat,group=group),
fill="deeppink",
alpha=0.7)+
theme_void()
# facets por tipo de espacio
ggplot()+
geom_polygon(data = su.f,aes(x=long,y=lat,group=group),
fill="grey80",
color ="white",
size=0.1
)+
geom_polygon(data = ep.cali.f ,
aes(x=long,y=lat,group=group),
fill="deeppink",
alpha=1)+
coord_equal()+
theme_void()+
facet_wrap(~categoria, ncol = 4)+
theme(strip.text.x = element_text(size = 8))
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
clean_book()
clean_book()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
warnings()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
summary(lm.mxn.cobertura_copa.ap)$adj.r.squared.
summary(lm.mxn.cobertura_copa.ap)
sm<-summary(lm.mxn.cobertura_copa.ap)
clean_book()
clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
lm.best.area_copa
lm.best.cobertura.ap
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
lm.best.cobertura.ap
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
clean_book()
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
warnings()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::word_document2")
bookdown::render_book("index.Rmd", "bookdown::word_document2")
bookdown::render_book("index.Rmd", "bookdown::word_document2")
bookdown::render_book("index.Rmd", "bookdown::word_document2")
bookdown::render_book("index.Rmd", "bookdown::word_document2")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
#bookdown::preview_chapter("procesa_analisis.Rmd",'bookdown::gitbook')
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
#bookdown::render_book("index.Rmd", "bookdown::word_document2")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
#bookdown::preview_chapter("procesa_analisis.Rmd",'bookdown::gitbook')
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
#bookdown::render_book("index.Rmd", "bookdown::word_document2")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
#bookdown::preview_chapter("procesa_analisis.Rmd",'bookdown::gitbook')
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
#bookdown::render_book("index.Rmd", "bookdown::word_document2")
