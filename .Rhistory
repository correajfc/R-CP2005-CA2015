load("bck_201811.RData")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
#SAR
sar.cobertura.ap.wq<-lagsarlm(formula = as.formula(lm.best.cobertura.ap),
data = lm.best.cobertura.ap$model,
listw = W_queen,
zero.policy = T,
tol.solve=1.0e-30)
sar.sm<-summary(sar.cobertura.ap.wq,Nagelkerke=T)
sar.sm
# SEM
sem.cobertura.ap.wq<-errorsarlm(formula = as.formula(lm.best.cobertura.ap),
data = lm.best.cobertura.ap$model,
listw = W_queen,
zero.policy = T,
tol.solve=1.0e-30)
sem.sm<-summary(sem.cobertura.ap.wq,
Nagelkerke=T)
sem.sm
#SD
sd.cobertura.ap.wq<-lagsarlm(formula = as.formula(lm.best.cobertura.ap),
data = lm.best.cobertura.ap$model,
listw = W_queen, zero.policy = T,
tol.solve=1.0e-30,
type = "mixed")
sd.sm<-summary(sd.cobertura.ap.wq,Nagelkerke=T)
sd.sm
#SLX
slx.cobertura.ap.wq<-lmSLX(formula = as.formula(lm.best.cobertura.ap),
data = lm.best.cobertura.ap$model,
listw = W_queen,
zero.policy = T)
slx.sm<-summary(slx.cobertura.ap.wq)
slx.sm
AIC(slx.cobertura.ap.wq)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
diagPlotlaglm<-function(laglm,theme.base_size){
require(ggplot2)
model<-myaugment(laglm)
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(alpha=0.6)
p1<-p1+stat_smooth(method="lm")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Valores ajustados")+ylab("Residuos")
p1<-p1+ggtitle("Residuos vs Valores ajustados")+theme_bw(base_size =theme.base_size )
p2<-  ggplot(model)+stat_qq(aes(sample=.resid))
# geom_abline(intercept = 0, slope = 1, alpha = 0.5)
p2<-p2+xlab("Cuantiles teóricos")+ylab("Residuos")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw(base_size =theme.base_size)
p3<-ggplot(model)+geom_histogram(aes(.resid,y=..density..), color ="white")+
stat_function(fun=dnorm,
color="red",
args=list(mean=mean(model$.resid),
sd=sd(model$.resid)))
# p3<-p3+geom_density(aes(.resid))
p3<-p3+ggtitle("Histograma residuos")+
xlab("Residuos")+ylab("Densidad")+theme_bw(base_size =theme.base_size)
return(list(p1, p2, p3))
}
diagPlotlaglm<-function(laglm,theme.base_size = 9){
require(ggplot2)
model<-myaugment(laglm)
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(alpha=0.6)
p1<-p1+stat_smooth(method="lm")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Valores ajustados")+ylab("Residuos")
p1<-p1+ggtitle("Residuos vs Valores ajustados")+theme_bw(base_size =theme.base_size )
p2<-  ggplot(model)+stat_qq(aes(sample=.resid))
# geom_abline(intercept = 0, slope = 1, alpha = 0.5)
p2<-p2+xlab("Cuantiles teóricos")+ylab("Residuos")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw(base_size =theme.base_size)
p3<-ggplot(model)+geom_histogram(aes(.resid,y=..density..), color ="white")+
stat_function(fun=dnorm,
color="red",
args=list(mean=mean(model$.resid),
sd=sd(model$.resid)))
# p3<-p3+geom_density(aes(.resid))
p3<-p3+ggtitle("Histograma residuos")+
xlab("Residuos")+ylab("Densidad")+theme_bw(base_size =theme.base_size)
return(list(p1, p2, p3))
}
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD"),nrow =5)
diagPlotlaglm<-function(laglm,theme.base_size = 8){
require(ggplot2)
model<-myaugment(laglm)
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(alpha=0.6)
p1<-p1+stat_smooth(method="lm")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Valores ajustados")+ylab("Residuos")
p1<-p1+ggtitle("Residuos vs Valores ajustados")+theme_bw(base_size =theme.base_size )
p2<-  ggplot(model)+stat_qq(aes(sample=.resid))
# geom_abline(intercept = 0, slope = 1, alpha = 0.5)
p2<-p2+xlab("Cuantiles teóricos")+ylab("Residuos")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw(base_size =theme.base_size)
p3<-ggplot(model)+geom_histogram(aes(.resid,y=..density..), color ="white")+
stat_function(fun=dnorm,
color="red",
args=list(mean=mean(model$.resid),
sd=sd(model$.resid)))
# p3<-p3+geom_density(aes(.resid))
p3<-p3+ggtitle("Histograma residuos")+
xlab("Residuos")+ylab("Densidad")+theme_bw(base_size =theme.base_size)
return(list(p1, p2, p3))
}
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD"),nrow =5)
tabla<-fitstats_laglm_df(lm.best.area_copa,W_queen) %>%
rename(`OLS`=fitstats) %>%
#  left_join(fitstats_laglm_df(slx.mod.log.area_copa.wq,W_queen),by= "medidasfit") %>%
# rename(`SLX`=fitstats) %>%
left_join(fitstats_laglm_df(sar.mod.log.area_copa.wq,W_queen),by= "medidasfit") %>%
rename(`SAR`=fitstats) %>%
left_join(fitstats_laglm_df(sem.mod.log.area_copa.wq,W_queen),by= "medidasfit") %>%
rename(`SEM`=fitstats) %>%
left_join(fitstats_laglm_df(sd.mod.log.area_copa.wq,W_queen),by= "medidasfit") %>%
rename(`SD`=fitstats)
knitr::kable(tabla, digits = 5, caption = "Metricas de ajuste para los modelos de área de copa $W_q$")
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM Wd"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD Wq"),nrow =5)
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM Wd"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD Wq"),nrow =5)
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM Wd"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD Wq"),nrow =5)
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM Wd"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD Wq"),nrow =5)
sm<-summary(sem.mod.log.area_copa.wd)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\lambda$","Likelihood ratio","p-value"),
r1)
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SEM de área de copa $W_d$', booktabs = TRUE)
lm.best.area_copa
#SAR
sar.mod.log.area_copa.wd<-lagsarlm(formula = as.formula(lm.best.area_copa),
data = lm.best.area_copa$model,
listw = W_dist1000.inv,
zero.policy = T,
tol.solve=1.0e-30)
sar.sm<-summary(sar.mod.log.area_copa.wd,
Nagelkerke=T)
sar.sm
# SEM
sem.mod.log.area_copa.wd<-errorsarlm(formula = as.formula(lm.best.area_copa),
data = lm.best.area_copa$model,
listw = W_dist1000.inv,
zero.policy = T,tol.solve=1.0e-30)
sem.sm<-summary(sem.mod.log.area_copa.wd,Nagelkerke=T)
sem.sm
#SD
sd.mod.log.area_copa.wd<-lagsarlm(formula = as.formula(lm.best.area_copa),
data = lm.best.area_copa$model,
listw = W_dist1000.inv,
zero.policy = T,
tol.solve=1.0e-30,
type = "mixed")
sd.sm<-summary(sd.mod.log.area_copa.wd,
Nagelkerke=T)
sd.sm
# #SLX
# slx.mod.log.area_copa.wq<-lmSLX(formula = as.formula(lm.best.area_copa),
#                            data = lm.best.area_copa$model,
#                            listw = W_queen,
#                            zero.policy = T)
#
# slx.sm<-summary(slx.mod.log.area_copa.wq)
# slx.sm
# AIC(slx.mod.log.area_copa.wq)
#SAR
sar.mod.log.area_copa.wd<-lagsarlm(formula = as.formula(lm.best.area_copa),
data = lm.best.area_copa$model,
listw = W_dist1000.inv,
zero.policy = T,
tol.solve=1.0e-30)
sar.sm<-summary(sar.mod.log.area_copa.wd,
Nagelkerke=T)
sar.sm
# SEM
sem.mod.log.area_copa.wd<-errorsarlm(formula = as.formula(lm.best.area_copa),
data = lm.best.area_copa$model,
listw = W_dist1000.inv,
zero.policy = T,tol.solve=1.0e-30)
sem.sm<-summary(sem.mod.log.area_copa.wd,Nagelkerke=T)
sem.sm
#SD
sd.mod.log.area_copa.wd<-lagsarlm(formula = as.formula(lm.best.area_copa),
data = lm.best.area_copa$model,
listw = W_dist1000.inv,
zero.policy = T,
tol.solve=1.0e-30,
type = "mixed")
sd.sm<-summary(sd.mod.log.area_copa.wd,
Nagelkerke=T)
sd.sm
# #SLX
# slx.mod.log.area_copa.wq<-lmSLX(formula = as.formula(lm.best.area_copa),
#                            data = lm.best.area_copa$model,
#                            listw = W_queen,
#                            zero.policy = T)
#
# slx.sm<-summary(slx.mod.log.area_copa.wq)
# slx.sm
# AIC(slx.mod.log.area_copa.wq)
sar.mod.log.area_copa.wd
sem.mod.log.area_copa.wd
sd.mod.log.area_copa.wd
sm<-summary(sem.mod.log.area_copa.wd)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\lambda$","Likelihood ratio","p-value"),
r1)
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SEM de área de copa $W_d$', booktabs = TRUE)
sem.mod.log.area_copa.wd
t1<-summary(sem.mod.log.area_copa.wd)$Coef
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SEM de área de copa $W_d$', booktabs = TRUE)
sm<-summary(sem.mod.log.area_copa.wd)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\lambda$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SEM de área de copa $W_d$', booktabs = TRUE)
sem.mod.log.area_copa.wd
sm<-summary(sem.mod.log.area_copa.wd)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\lambda$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SEM de área de copa $W_d$', booktabs = TRUE)
t1<-summary(sd.mod.log.area_copa.wq)$Coef
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SD de área de copa $W_q$', booktabs = TRUE)
sm<-summary(sem.mod.log.area_copa.wd)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de área de copa $W_q$', booktabs = TRUE)
sm<-summary(sd.mod.log.area_copa.wd)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de área de copa $W_q$', booktabs = TRUE)
sem.mod.log.area_copa.wd
sem.mod.log.area_copa.wd$lambda
sm<-summary(sem.mod.log.area_copa.wd)
r1<-round(c(sm$lam,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\lambda$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SEM de área de copa $W_d$', booktabs = TRUE)
sm
sm$lambda
sm<-summary(sem.mod.log.area_copa.wd)
r1<-round(c(sm$lambda,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\lambda$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SEM de área de copa $W_d$', booktabs = TRUE)
sm<-summary(sd.mod.log.area_copa.wd)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de área de copa $W_q$', booktabs = TRUE)
sm
sm<-summary(sd.mod.log.area_copa.wq)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de área de copa $W_q$', booktabs = TRUE)
sm<-summary(sd.mod.log.area_copa.wq)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de área de copa $W_q$', booktabs = TRUE)
diagPltsSAR.wq<-diagPlotlaglm(sar.cobertura.ap.wq)
diagPltsSD.wd<-diagPlotlaglm(sd.cobertura.ap.wd)
diagPltsOLS<-diagPlotlaglm(lm.best.cobertura.ap)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSAR.wq, ncol = 3,left = "SAR Wq"),
arrangeGrob(grobs = diagPltsSD.wd,ncol = 3, left = "SD Wd"),nrow =5)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
#librerias
library(rgdal)
library(rgeos)
library(raster)
library(sp)
library(spdep)
library(car)
library(tidyverse)
library(magrittr)
library(stringr)
library(purrr)
library(reshape2)
library(broom)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
library(kableExtra)
library(lmtest)
library(glue)
library(visdat)
library(latex2exp)
load("bck_201811.RData")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
beepr::beep(8)
warning()
warnings()
last.warning
warning("HOla warning")
warning("Hola warning")
message()
message("mensaje ")
# Scrip principal para la la ejecución de los .R
#librerias
library(rgdal)
library(rgeos)
library(raster)
library(sp)
library(spdep)
library(car)
library(tidyverse)
library(magrittr)
library(stringr)
library(purrr)
library(reshape2)
library(broom)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
library(kableExtra)
library(lmtest)
library(glue)
library(visdat)
library(latex2exp)
load("bck_201811.RData")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
#librerias
library(rgdal)
library(rgeos)
library(raster)
library(sp)
library(spdep)
library(car)
library(tidyverse)
library(magrittr)
library(stringr)
library(purrr)
library(reshape2)
library(broom)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
library(kableExtra)
library(lmtest)
library(glue)
library(visdat)
library(latex2exp)
load("bck_201811.RData")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
#librerias
library(rgdal)
library(rgeos)
library(raster)
library(sp)
library(spdep)
library(car)
library(tidyverse)
library(magrittr)
library(stringr)
library(purrr)
library(reshape2)
library(broom)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
library(kableExtra)
library(lmtest)
library(glue)
library(visdat)
library(latex2exp)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
dependiente <- "log.area_copa"
independientes  <- c(indep.poblacion.copa.sel,indep.predios.copa.sel)
# max normalizado
var_names<-c(dependiente,names(regresion.arboles[,independientes]))
regresion.arboles.mn<-max_nomalization(regresion.arboles,var_names)
f <- paste(str_c(dependiente,".mxn"),
"~", paste(str_c(independientes,".mxn"),
collapse=" + "))
lm.area_copa<-lm(f,
data = regresion.arboles.mn)
sm<-summary(lm.mod.area_copa)
sm
max_nomalization
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM Wd"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD Wq"),nrow =3)
source("funciones.R")
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM Wd"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD Wq"),nrow =3)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
# NOT RUN {
## generate a regressor
x <- rep(c(-1,1), 50)
## generate heteroskedastic and homoskedastic disturbances
err1 <- rnorm(100, sd=rep(c(1,2), 50))
err2 <- rnorm(100)
## generate a linear relationship
y1 <- 1 + x + err1
y2 <- 1 + x + err2
## perform Breusch-Pagan test
bptest(y1 ~ x)
bptest(y2 ~ x)
# }
