# espacios publicos (verdes)
ggplot()+
geom_polygon(data = s_1000_df,
aes(x=long,y=lat,group=group),
fill = "salmon",
alpha = 0.2)+
geom_path(data = su.f,aes(x=long,y=lat,group=group),
color="grey40",
size=0.4)+
coord_equal()+
theme_void()
# mapa de radios de 1km al desde los centriodes
# espacios publicos (verdes)
ggplot()+
geom_polygon(data = s_1000_df,
aes(x=long,y=lat,group=group),
fill = "salmon",
alpha = 0.2)+
geom_path(data = su.f,aes(x=long,y=lat,group=group),
color="grey40",
size=0.4)+
coord_equal()+
theme_void()+
ggsn::scalebar(ep.cali.f,dist = 1,st.size = 4,height = 0.3)
# mapa de radios de 1km al desde los centriodes
# espacios publicos (verdes)
ggplot()+
geom_polygon(data = s_1000_df,
aes(x=long,y=lat,group=group),
fill = "salmon",
alpha = 0.2)+
geom_path(data = su.f,aes(x=long,y=lat,group=group),
color="grey40",
size=0.4)+
coord_equal()+
theme_void()+
ggsn::scalebar(ep.cali.f,dist = 1,st.size = 4,height = 0.1)
# mapa de radios de 1km al desde los centriodes
# espacios publicos (verdes)
ggplot()+
geom_polygon(data = s_1000_df,
aes(x=long,y=lat,group=group),
fill = "salmon",
alpha = 0.2)+
geom_path(data = su.f,aes(x=long,y=lat,group=group),
color="grey40",
size=0.4)+
coord_equal()+
theme_void()+
ggsn::scalebar(ep.cali.f,dist = 1,st.size = 4,height = 0.01)
# mapa de radios de 1km al desde los centriodes
# espacios publicos (verdes)
ggplot()+
geom_polygon(data = s_1000_df,
aes(x=long,y=lat,group=group),
fill = "salmon",
alpha = 0.2)+
geom_path(data = su.f,aes(x=long,y=lat,group=group),
color="grey40",
size=0.4)+
coord_equal()+
theme_void()+
ggsn::scalebar(ep.cali.f,dist = 1,st.size = 4,height = 0.05)
# mapa de radios de 1km al desde los centriodes
# espacios publicos (verdes)
ggplot()+
geom_polygon(data = s_1000_df,
aes(x=long,y=lat,group=group),
fill = "salmon",
alpha = 0.2)+
geom_path(data = su.f,aes(x=long,y=lat,group=group),
color="grey40",
size=0.4)+
coord_equal()+
theme_void()+
ggsn::scalebar(ep.cali.f,dist = 1,st.size = 4,height = 0.02)
# mapa de radios de 1km al desde los centriodes
# espacios publicos (verdes)
ggplot()+
geom_polygon(data = s_1000_df,
aes(x=long,y=lat,group=group),
fill = "salmon",
alpha = 0.2)+
geom_path(data = su.f,aes(x=long,y=lat,group=group),
color="grey40",
size=0.4)+
coord_equal()+
theme_void()+
ggsn::scalebar(ep.cali.f,dist = 2,st.size = 4,height = 0.02)
rlang::last_error()
summary(rlang::last_error())
slx.mod.sqrt.area_copa.wq
diagPltsSlX<-diagPlot(slx.mod.sqrt.area_copa.wq)
augment(slx.mod.sqrt.area_copa.wq)
rlang::last_error()
slx.mod.sqrt.area_copa.wq
slx.mod.sqrt.area_copa.wq %>%  class()
rlang::last_error()
slx.mod.sqrt.area_copa.wq
sd.mod.sqrt.area_copa.wq
sd.mod.sqrt.area_copa.wq %>% class()
slx.mod.sqrt.area_copa.wq %>% class()
class(slx.mod.sqrt.area_copa.wq) <- "lm"
diagPltsSlX<-diagPlot(slx.mod.sqrt.area_copa.wq)
diagPltsSAR<-diagPlotlaglm(sar.mod.sqrt.area_copa.wq)
diagPltsSAR
augment(slx.mod.sqrt.area_copa.wq)
rlang::last_error()
slx.mod.sqrt.area_copa.wq %>% class()
#SLX
slx.mod.sqrt.area_copa.wq<-lmSLX(formula = as.formula(lm.mod.area_copa),
data = lm.mod.area_copa$model,
listw = W_queen, zero.policy = T)
summary(slx.mod.sqrt.area_copa.wq)
diagPltsSLX<-diagPlotlaglm(slx.mod.sqrt.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.mod.area_copa)
diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
source("analisis_geoestadistico.R")
source("analisis_estadistico_EV.R")
source("analisis_geoestadistico_EV.R")
rlang::last_error()
# nb.su<-poly2nb(su, row.names = su$SETU_CCDGO)
# par(mai=c(0,0,0,0))
# #plot(su)
# plot(nb.su, coordinates(su), col='grey50', pch=19, cex=0.1)
# dev.off()
su.EV<-su[su$SETU_CCDGO %in% regresion.EV$SETU_CCDGO ,]
lnb.su<-poly2nb(su.EV)
W_cont.ev<-nb2listw(lnb.su, style="W", zero.policy=T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(lnb.su, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
# dev.off()
par(mar=rep(0,4))
plot(W_cont.ev,coords=coordinates(su.EV),pch=19, cex=0.1, col="gray")
lnb.su<-poly2nb(su.EV, queen = T)
W_queen.ev<-nb2listw(lnb.su, style="W", zero.policy=T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(W_queen.ev, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
# dev.off()
par(mar=rep(0,4))
plot(W_queen.ev,coords=coordinates(su.EV),pch=19, cex=0.1, col="gray")
#otras matrices de pesos W ----
coords<-coordinates(su.EV)
# matriz distancias inversas en el rango de 1000 metros desde el centriode
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W", zero.policy=T)
W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
# lnb.su<-poly2nb(su.arboles, queen = T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(W_dist1000.inv.ev, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
par(mar=rep(5,4))
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_queen.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
moran.test(regresion.EV$area_ep.porcentaje, listw=W_queen.ev)
moran.test(regresion.EV$ia.areas.dist, listw=W_queen.ev)
moran.test(lm.area_ep.ptje.sel$residuals, listw=W_queen.ev)
moran.test(lm.ia.areas.dist.sel$residuals, listw=W_queen.ev)
par(mar=rep(5,4))
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_dist1000.inv.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(analisis.cali.df$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
par(mar=rep(5,4))
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_dist1000.inv.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(analisis.cali.df$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
# matriz distancias inversas en el rango de 1000 metros desde el centriode
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
W_dist1000.ev
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W", zero.policy=T)
W_dist1000_mat.ev
W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv_mat.ev
plot(W_dist1000.inv_mat.ev)
plot(raster(W_dist1000.inv_mat.ev))
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W",)
W_dist1000.inv.ev
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W",zero.policy=T)
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W", zero.policy=T)
# matriz distancias inversas en el rango de 1000 metros desde el centriode
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W", zero.policy=T)
W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]
W_dist1000.inv_mat.ev[is.na(W_dist1000.inv_mat.ev)]
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv_mat.ev %>% dim()
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W", zero.policy=T)
W_dist1000.inv_mat.ev<-1/W_dist1000_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
# lnb.su<-poly2nb(su.arboles, queen = T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(W_dist1000.inv.ev, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
par(mar=rep(5,4))
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_queen.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
moran.test(regresion.EV$area_ep.porcentaje, listw=W_queen.ev)
moran.test(regresion.EV$ia.areas.dist, listw=W_queen.ev)
moran.test(lm.area_ep.ptje.sel$residuals, listw=W_queen.ev)
moran.test(lm.ia.areas.dist.sel$residuals, listw=W_queen.ev)
par(mar=rep(5,4))
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_dist1000.inv.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(analisis.cali.df$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
# lnb.su<-poly2nb(su.arboles, queen = T)
par(mai=c(0,0,0,0))
matplot((-4:5)^2, main = "Quadratic")
par(mar=rep(5,4))
matplot((-4:5)^2, main = "Quadratic")
matplot(W_dist1000.inv.ev, main = "Quadratic")
matplot(W_dist1000.inv.ev)
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_queen.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
# matriz distancias inversas en el rango de 1000 metros desde el centriode
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W")
W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W",zero.policy = T)
W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
# lnb.su<-poly2nb(su.arboles, queen = T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(W_dist1000.inv.ev, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
par(mar=rep(5,4))
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_queen.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
moran.test(regresion.EV$area_ep.porcentaje, listw=W_queen.ev)
moran.test(regresion.EV$ia.areas.dist, listw=W_queen.ev)
moran.test(lm.area_ep.ptje.sel$residuals, listw=W_queen.ev)
moran.test(lm.ia.areas.dist.sel$residuals, listw=W_queen.ev)
par(mar=rep(5,4))
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_dist1000.inv.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(analisis.cali.df$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
# matriz distancias inversas en el rango de 1000 metros desde el centriode
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W",zero.policy = T)
W_dist1000_mat.ev
plot(raster(W_dist1000_mat.ev))
W_dist1000_mat.ev %>% max()
# matriz distancias inversas en el rango de 1000 metros desde el centriode
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W",zero.policy = T)
W_dist1000_mat.ev %>% max()
W_dist1000_mat.ev %>% min()
coords
moran.test(regresion.EV$ia.areas.dist, listw=W_dist1000.inv.ev,zero.policy = TRUE)
# matriz distancias inversas en el rango de 1000 metros desde el centriode
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W",zero.policy = T)
W_dist1000.ev<-gDistance(coords, byid=T)
W_dist1000.ev<-gDistance(su.EV, byid=T)
W_dist1000.ev
coords<-gCentroid(su.EV, byid = T)
W_dist1000.ev<-gDistance(coords, byid=T)
plot(raster(W_dist1000.ev))
W_dist1000.ev[W_dist1000.ev > 1000] <- 0
plot(raster(W_dist1000.ev))
W_dist1000_mat.ev<-1000/W_dist1000.ev # para mantener los numeros no tan cercanos a 0
diag(W_dist1000_mat.ev) <- 0
plot(raster(W_dist1000_mat.ev))
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]
# matriz distancias inversas en el rango de 1000 metros desde el centriode
# W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
# W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W",zero.policy = T)
# W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
coords<-gCentroid(su.EV, byid = T)
W_dist1000.ev<-gDistance(coords, byid=T)
W_dist1000.ev[W_dist1000.ev > 1000] <- 0
W_dist1000_mat.ev<-1000/W_dist1000.ev # para mantener los numeros no tan cercanos a 0
diag(W_dist1000_mat.ev) <- 0
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
# lnb.su<-poly2nb(su.arboles, queen = T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(W_dist1000.inv.ev, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
par(mar=rep(5,4))
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_queen.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
moran.test(regresion.EV$area_ep.porcentaje, listw=W_queen.ev)
moran.test(regresion.EV$ia.areas.dist, listw=W_queen.ev)
moran.test(lm.area_ep.ptje.sel$residuals, listw=W_queen.ev)
moran.test(lm.ia.areas.dist.sel$residuals, listw=W_queen.ev)
par(mar=rep(5,4))
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_dist1000.inv.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(analisis.cali.df$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_dist1000.inv.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
moran.plot(lm.area_ep.ptje.sel$residuals,
listw=W_dist1000.inv.ev,
pch=16, col="black",
cex=.5, quiet=F,
labels=as.character(regresion.EV$SETU_CCDGO),
xlab="residuos",
ylab="residuos (Spatial Lag)", main="Gráfico de Moran")
coords<-gCentroid(su.EV, byid = T)
W_dist1000.ev<-gDistance(coords, byid=T)
W_dist1000.ev[W_dist1000.ev > 1000] <- 0
W_dist1000.inv_mat.ev<-1000/W_dist1000.ev # para mantener los numeros no tan cercanos a 0
diag(W_dist1000.inv_mat.ev) <- 0
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]
# matriz distancias inversas en el rango de 1000 metros desde el centriode
# W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
# W_dist1000_mat.ev<-nb2mat(W_dist1000.ev, style="W",zero.policy = T)
# W_dist1000.inv_mat.ev<-1000/W_dist1000_mat.ev
W_dist1000.inv_mat.ev[!is.finite(W_dist1000.inv_mat.ev)]<- 0
W_dist1000.inv.ev<-mat2listw(W_dist1000.inv_mat.ev,style = "W")
coords<-gCentroid(su.EV, byid = T)
W_dist1000.ev<-gDistance(coords, byid=T)
W_dist1000.ev[W_dist1000.ev > 1000] <- 0
# W_dist1000.inv_mat.ev<-1000/W_dist1000.ev # para mantener los numeros no tan cercanos a 0
# diag(W_dist1000.inv_mat.ev) <- 0
W_dist1000.inv_mat.ev <- W_dist1000.ev
for(i in 1:dim(W_dist1000.inv_mat.ev)[1]) {W_dist1000.inv_mat.ev[i,i] = 0} # renders exactly zero all diagonal elements
W_dist1000.inv_mat.ev[W_dist1000.inv_mat.ev > 1000] <- 0                   # all distances > 1000 miles are set to zero
W_dist1000.inv_mat.ev <- ifelse(W_dist1000.inv_mat.ev!=0, 1/W_dist1000.inv_mat.ev, W_dist1000.inv_mat.ev)    # inverting distances
W_dist1000.inv.ev <- mat2listw(W_dist1000.inv_mat.ev, style="W")    # create a (normalized) listw object
plot(W_dist1000.inv.ev)
coords
#otras matrices de pesos W ----
coords<-coordinates(su.EV)
#otras matrices de pesos W ----
coords<-coordinates(su.EV)
# centroides.su.arboles<-gCentroid(su.arboles, byid = T)
# W_dist_mat<-gDistance(centroides.su.arboles, byid=T)
# W_dist.inv_mat<-1000/W_dist_mat # para mantener los numeros no tan cercanos a 0
# diag(W_dist.inv_mat) <- 0
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
dists <- nbdists(W_dist1000.ev, coords, longlat=FALSE)
glist <- lapply(dists, function(x) 1/x)
lw <- nb2listw(nb, glist, style="W")
# centroides.su.arboles<-gCentroid(su.arboles, byid = T)
# W_dist_mat<-gDistance(centroides.su.arboles, byid=T)
# W_dist.inv_mat<-1000/W_dist_mat # para mantener los numeros no tan cercanos a 0
# diag(W_dist.inv_mat) <- 0
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
dists <- nbdists(W_dist1000.ev, coords, longlat=FALSE)
glist <- lapply(dists, function(x) 1/x)
lw <- nb2listw(W_dist1000.ev, glist, style="W")
dists
#librerias
library(rgdal)
library(rgeos)
library(raster)
library(sp)
library(spdep)
library(car)
library(tidyverse)
library(magrittr)
library(stringr)
library(purrr)
library(reshape2)
library(broom)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
library(kableExtra)
library(lmtest)
library(glue)
library(visdat)
library(latex2exp)
#  correr los script en el orden correcto para realizar todos los calculos
# Start the clock!
ptm <- proc.time()
source("funciones.R")
source("geodata.R")
source("arboles.R")
source("censopoblacion.R")
source("consolidarDatos.R")
source("analisis_exploratorio.R")
source("analisis_estadistico.R")
source("resultados.R")
source("analisis_geoestadistico.R")
source("analisis_estadistico_EV.R")
source("analisis_geoestadistico_EV.R")
# Stop the clock
proc.time() - ptm
# nb.su<-poly2nb(su, row.names = su$SETU_CCDGO)
# par(mai=c(0,0,0,0))
# #plot(su)
# plot(nb.su, coordinates(su), col='grey50', pch=19, cex=0.1)
# dev.off()
su.EV<-su[su$SETU_CCDGO %in% regresion.EV$SETU_CCDGO ,]
lnb.su<-poly2nb(su.EV)
W_cont.ev<-nb2listw(lnb.su, style="W", zero.policy=T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(lnb.su, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
# dev.off()
par(mar=rep(0,4))
plot(W_cont.ev,coords=coordinates(su.EV),pch=19, cex=0.1, col="gray")
lnb.su<-poly2nb(su.EV, queen = T)
W_queen.ev<-nb2listw(lnb.su, style="W", zero.policy=T)
par(mai=c(0,0,0,0))
plot(su, border="grey80")
plot(W_queen.ev, coordinates(su.EV), col='orchid1',pch=19, cex=0.1, add=TRUE)
# dev.off()
par(mar=rep(0,4))
plot(W_queen.ev,coords=coordinates(su.EV),pch=19, cex=0.1, col="gray")
#otras matrices de pesos W ----
coords<-coordinates(su.EV)
# centroides.su.arboles<-gCentroid(su.arboles, byid = T)
# W_dist_mat<-gDistance(centroides.su.arboles, byid=T)
# W_dist.inv_mat<-1000/W_dist_mat # para mantener los numeros no tan cercanos a 0
# diag(W_dist.inv_mat) <- 0
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
dists <- nbdists(W_dist1000.ev, coords, longlat=FALSE)
glist <- lapply(dists, function(x) 1/x)
glist
lw <- nb2listw(W_dist1000.ev, glist, style="W")
# centroides.su.arboles<-gCentroid(su.arboles, byid = T)
# W_dist_mat<-gDistance(centroides.su.arboles, byid=T)
# W_dist.inv_mat<-1000/W_dist_mat # para mantener los numeros no tan cercanos a 0
# diag(W_dist.inv_mat) <- 0
W_dist1000.ev<-dnearneigh(coords,0,1001,longlat = FALSE)
#coords<-gCentroid(su.EV, byid = T)
#W_dist1000.ev<-gDistance(coords, byid=T)
#W_dist1000.ev[W_dist1000.ev > 1000] <- 0
# W_dist1000.inv_mat.ev<-1000/W_dist1000.ev # para mantener los numeros no tan cercanos a 0
# diag(W_dist1000.inv_mat.ev) <- 0
W_dist1000.inv_mat.ev <- W_dist1000.ev
for(i in 1:dim(W_dist1000.inv_mat.ev)[1]) {W_dist1000.inv_mat.ev[i,i] = 0} # renders exactly zero all diagonal elements
W_dist1000.ev
dim(W_dist1000.inv_mat.ev)[1])
dim(W_dist1000.inv_mat.ev)
#coords<-gCentroid(su.EV, byid = T)
#W_dist1000.ev<-gDistance(coords, byid=T)
#W_dist1000.ev[W_dist1000.ev > 1000] <- 0
# W_dist1000.inv_mat.ev<-1000/W_dist1000.ev # para mantener los numeros no tan cercanos a 0
# diag(W_dist1000.inv_mat.ev) <- 0
W_dist1000.inv_mat.ev <- W_dist1000.ev
