p <- pintar_corrmatrix(reemplzar_nombres_df(regresion.arboles,df_nombres_variables),
reemplzar_nombres_vector(indep.poblacion,df_nombres_variables))
reemplzar_nombres_df(regresion.arboles,df_nombres_variables)
reemplzar_nombres_df(regresion.arboles,df_nombres_variables) %>% names()
reemplzar_nombres_vector(indep.poblacion,df_nombres_variables)
indep.poblacion
reemplzar_nombres_vector(indep.poblacion,df_nombres_variables)
reemplzar_nombres_vector <- function(vec, df_nombres){
df_nombres_f <- df_nombres %>%
filter_at(1, all_vars(. %in% vec))
oldnames <- pull(df_nombres_f,1)
newnames <- pull(df_nombres_f,2)
# for (i in 1:length(oldnames)) {
#
#   vec <- str_replace(vec,pattern = fixed(oldnames[i]),replacement = newnames[i])
#
# }
for (i in 1:length(vec)) {
for (j in 1:length(oldnames)) {
if(vec[i]==oldnames[j])
vec[i] <- newnames[j]
}
vec
}
reemplzar_nombres_vector(indep.poblacion,df_nombres_variables)
pintar_corrmatrix(reemplzar_nombres_df(regresion.arboles,df_nombres_variables),
reemplzar_nombres_vector(indep.poblacion,df_nombres_variables))
pintar_corrmatrix(reemplzar_nombres_df(regresion.arboles,df_nombres_variables),
reemplzar_nombres_vector(indep.poblacion,df_nombres_variables), method_cor = "spearman")#+
# labs(title="Coeficiente Spearman \nentre variables de población")
bookdown::render_book("tesis_pdf.Rmd", "bookdown::pdf_book")
oldnames
df_nombres
vec
df_nombres %>%
filter_at(1, all_vars(. %in% vec))
df_nombres[,1] %in% vec
df_nombres[,1]
df_nombres[][1]
df_nombres[][[1]]
df_nombres[][[1]] %in% vec
df_nombres %>%
filter_at(1, all_vars(. %in% vec))
df_nombres %>%
filter_at(1, any_vars(. %in% vec))
df_nombres %>%
filter_at(1, all_vars(. %in% vec))
df_nombres[][[1]] %in% vec
vec
str_c(indep.poblacion.copa.sel%>% reemplzar_nombres_vector(df_nombres_variables), collapse = ", ")
bookdown::render_book("tesis_pdf.Rmd", "bookdown::pdf_book")
beepr::beep(8)
pintar_corrmatrix_XY(reemplzar_nombres_df(regresion.arboles,df_nombres_variables),
x=reemplzar_nombres_vector(indep.poblacion,df_nombres_variables),
y=reemplzar_nombres_vector(dependientes.arboles,df_nombres_variables))#+
pintar_corrmatrix_XY(reemplzar_nombres_df(regresion.arboles,df_nombres_variables),
x=reemplzar_nombres_vector(indep.poblacion,df_nombres_variables),
y=reemplzar_nombres_vector(dependientes.arboles,df_nombres_variables),
method_cor = "spearman")#+
# labs(title="Spearman entre cobertura de copa \ny variables de población")
bookdown::render_book("tesis_pdf.Rmd", "bookdown::pdf_book")
nombres_variables_ppales <- c("cobertura_copa.ap","densidad_poblacion","area_copa",
"superior_postgrado",
"ningun_estudio",
"con_alguna_limitacion",
"negro_mulato_afrocolombiano",
"afro.porcentaje",
"con_alguna_limitacion.porcentaje",
"ningun_estudio.porcentaje",
"superior_postgrado.porcentaje",
"cuarto.porcentaje",
"viviendas.porcentaje" ,
"unidad_economica.porcentaje",
"LEA.porcentaje",
"area_ep",
"area_ep.porcentaje",
"apartamento.porcentaje")
nombres_reemplazo <- c("cobertura de copa [%]","densidad de población","área de copa",
"con estudios superiores","ningún estudio","con alguna limitación",
"afrocolombianos",
"afrocolombianos [%]",
"con alguna limitación [%]",
"ningun estudio [%]",
"con estudios superiores [%]",
"vivienda tipo cuarto [%]",
"uso de vivienda [%]" ,
"uso de unidad economica [%]",
"uso de LEA [%]",
"área de EV",
"área de EV [%]",
"vivienda tipo apartamento [%]")
df_nombres_variables <- data_frame(nombres_variables_ppales,nombres_reemplazo)
tabla<-fitstats_lm_df(lm.area_copa) %>%
rename(`Log(AC)`=fitstats) %>%
left_join(fitstats_lm_df(lm.mod.cobertura.ap),by= "medidasfit") %>%
rename( `%CC`=fitstats)
kable(format = formato_render,  booktabs = T,tabla,caption = "Resumen métricas de ajuste OLS para el área de copa (AC) y cobertura de copa (CC) ", digits = 5)
pintar_mapa_su_LISA_var<-function(data,varname,W, wname= "W", ...){
require(spdep)
localmoranmatrix<-localmoran(data[,varname], listw=W, zero.policy = TRUE)
lmoran.df<-as_data_frame(localmoranmatrix)
lmoran.df$SETU_CCDGO<-data$SETU_CCDGO
#lmoran.df$Z.Ii <-lmoran.df$Z.Ii %>% as.vector()
# escalar z valor
lmoran.df$s_var <- scale(data[,varname])  %>% as.vector()
# varible retardada
lmoran.df$lag_s_var <- lag.listw(W, lmoran.df$s_var , zero.policy = TRUE)
lmoran.df$p<-lmoran.df$`Pr(z > 0)`%>% as.vector()
lmoran.df$Z.Ii<-lmoran.df$Z.Ii%>% as.vector()
# summary of variables
summary(su.arboles@data)
# crear etiqueta de observaciones foco de la autocorrelacion
lmoran.df<-lmoran.df %>% rowwise() %>%
mutate(quad_sig_05=localmoran_quad(s_var,lag_s_var, p , 0.05))
coloresLisa<-brewer.pal(5, "RdBu")
quad_moran = c("high-high","high-low" ,"not signif.", "low-high","low-low")
labels = c("h-h","h-l" ,"not signif.", "l-h","l-l")
# volverlas un factor ordenado para que coincida con los colores
lmoran.df$quad_sig_05<-factor(lmoran.df$quad_sig_05, levels =quad_moran)
su_df<-su.f %>% dplyr::select(-area_su)  %>%
left_join(lmoran.df, by = c("id"="SETU_CCDGO"))
mapa_cluster<-su_df %>%
ggplot(aes(long, lat, group = group, fill = quad_sig_05)) +
geom_polygon(data =su.f,aes(x= long, y = lat, group = group), fill ="grey60") +
geom_polygon(color = "grey90", size = .05)  +
coord_equal() +
theme_void() +
scale_fill_manual(values = coloresLisa, drop =FALSE,
labels = labels,
guide = guide_legend(direction = "horizontal",
label.position = "bottom",
title.position = 'top',
nrow = 1))+
tema_lgnd_abajo()
# grafica discreta del p-value
signf_levels<-c(Inf,0.05,0.01,0.001,0.0001,0)
signf_levels_label<-c("0001",".001",".01",".05","not signif.")
mapa_p<-su_df %>%
ggplot() +
geom_polygon(data =su.f,aes(x= long, y = lat, group = group), fill ="grey60") +
geom_polygon(aes(long, lat, group = group, fill = cut(p,breaks =signf_levels)),
color = "grey90", size = .05)  +
coord_equal() +
theme_void()+
scale_fill_brewer(name ="P-val",palette = "Greens", drop=FALSE, direction = -1,
labels = signf_levels_label,
guide = guide_legend(direction = "horizontal",
label.position = "bottom",
title.position = 'top',
nrow = 1))+
tema_lgnd_abajo()
#tdy<-tidy(lm)
mapa_ZI<-ggplot(su_df)+
geom_polygon(aes_string(x= "long", y = "lat", group = "group", fill = "Z.Ii"),
color = "grey90", size = .05)+
coord_equal()+
scale_fill_gradient2(low = "firebrick1",mid ="white" ,high = "royalblue",
guide = guide_colorbar(
direction = "horizontal",
barheight = unit(2, units = "mm"),
barwidth = unit(35, units = "mm"),
draw.ulim = F,
title.position = 'top',
# some shifting around
title.hjust = 0.5,
label.hjust = 0.5
)
)+
theme_void()+
tema_lgnd_abajo()
# title1<-grid::textGrob(paste0("Mapas LISA - ",varname," - ",wname))
grid.arrange(mapa_ZI,mapa_p,mapa_cluster, #top = title1,
... = ...)
}
pintar_mapa_su_LISA_var(regresion.arboles,"log.area_copa",W_queen, wname = "Wq",nrow =1)
pintar_mapa_su_LISA_var(regresion.arboles,"log.area_copa",W_dist1000.inv, wname = "Wd",nrow =1)
diagPlotlaglm<-function(laglm,theme.base_size = 8){
require(ggplot2)
model<-myaugment(laglm)
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(alpha=0.6)
p1<-p1+stat_smooth(method="lm")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Valores ajustados")+ylab("Residuos")
p1<-p1+ggtitle("Residuos vs Valores ajustados")+
theme_bw(base_size =theme.base_size )+
theme(plot.title = element_text(size = theme.base_size))
p2<-  ggplot(model,aes(sample=.resid))+stat_qq()+stat_qq_line(color = "red")
# geom_abline(intercept = 0, slope = 1, alpha = 0.5)
p2<-p2+xlab("Cuantiles teóricos")+ylab("Residuos")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw(base_size =theme.base_size)
p3<-ggplot(model)+geom_histogram(aes(.resid,y=..density..), color ="white")+
stat_function(fun=dnorm,
color="red",
args=list(mean=mean(model$.resid),
sd=sd(model$.resid)))
# p3<-p3+geom_density(aes(.resid))
p3<-p3+ggtitle("Histograma residuos")+
xlab("Residuos")+ylab("Densidad")+theme_bw(base_size =theme.base_size)
return(list(p1, p2, p3))
}
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd,theme.base_size = 7)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq,theme.base_size = 7)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa,theme.base_size = 7)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM Wd"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD Wq"),nrow =3)
# t1<-summary(sem.mod.log.area_copa.wd)$Coef
# knitr::kable(format = formato_render,  booktabs = T,t1, digits=3,caption = 'Coeficientes del modelo SEM de área de copa $W_d$')
nombres_coef <- summary(sem.mod.log.area_copa.wd)$Coef %>%
row.names() %>%
str_remove_all(".mxn") %>%
reemplzar_nombres_vector(df_nombres_variables) %>%
# str_replace_all("[\\._]"," ") %>%
str_replace("\\(Intercept\\)","Intercepto")
t1<-summary(sem.mod.log.area_copa.wd)$Coef %>% as_data_frame()
t1 %>% bind_cols(terminos = nombres_coef,.) %>%
kableExtra::kable(format = formato_render,
# booktab = TRUE,
digits=3,
caption = "Coeficientes del modelo SEM de área de copa $W_d$" ,
booktabs = TRUE,
col.names = c("Término","Estimado","Error std.","t-valor","Pr(>|t|)"))
dependientes.EV.sel
nombres_variables_ppales <- c("cobertura_copa.ap","densidad_poblacion","area_copa",
"superior_postgrado",
"ningun_estudio",
"con_alguna_limitacion",
"negro_mulato_afrocolombiano",
"afro.porcentaje",
"con_alguna_limitacion.porcentaje",
"ningun_estudio.porcentaje",
"superior_postgrado.porcentaje",
"cuarto.porcentaje",
"viviendas.porcentaje" ,
"unidad_economica.porcentaje",
"LEA.porcentaje",
"area_ep",
"area_ep.porcentaje",
"apartamento.porcentaje",
"ia.areas.dist")
nombres_reemplazo <- c("cobertura de copa [%]","densidad de población","área de copa",
"con estudios superiores","ningún estudio","con alguna limitación",
"afrocolombianos",
"afrocolombianos [%]",
"con alguna limitación [%]",
"ningun estudio [%]",
"con estudios superiores [%]",
"vivienda tipo cuarto [%]",
"uso de vivienda [%]" ,
"uso de unidad economica [%]",
"uso de LEA [%]",
"área de EV",
"área de EV [%]",
"vivienda tipo apartamento [%]",
"razón área-distancia")
df_nombres_variables <- data_frame(nombres_variables_ppales,nombres_reemplazo)
bookdown::render_book("tesis_pdf.Rmd", "bookdown::pdf_book")
nombres_variables_ppales <- c("cobertura_copa.ap","densidad_poblacion","area_copa",
"superior_postgrado",
"ningun_estudio",
"con_alguna_limitacion",
"negro_mulato_afrocolombiano",
"afro.porcentaje",
"con_alguna_limitacion.porcentaje",
"ningun_estudio.porcentaje",
"superior_postgrado.porcentaje",
"cuarto.porcentaje",
"viviendas.porcentaje" ,
"unidad_economica.porcentaje",
"LEA.porcentaje",
"area_ep",
"area_ep.porcentaje",
"apartamento.porcentaje",
"lag.superior_postgrado",
"lag.densidad_poblacion",
"lag.cuarto.porcentaje",
"lag.area_ep",
"ia.areas.dist")
nombres_reemplazo <- c("cobertura de copa [%]","densidad de población","área de copa",
"con estudios superiores","ningún estudio","con alguna limitación",
"afrocolombianos",
"afrocolombianos [%]",
"con alguna limitación [%]",
"ningun estudio [%]",
"con estudios superiores [%]",
"vivienda tipo cuarto [%]",
"uso de vivienda [%]" ,
"uso de unidad economica [%]",
"uso de LEA [%]",
"área de EV",
"área de EV [%]",
"vivienda tipo apartamento [%]",
"estudios superiores (retardada)",
"densidad de población (retardada)",
"vivienda tipo cuarto [%] (retardada)",
"área de EV (retardada)",
"razón área-distancia")
df_nombres_variables <- data_frame(nombres_variables_ppales,nombres_reemplazo)
su.f %>% dplyr::select(-area_su)  %>%
left_join(dep.EV.ntl.long,by = c("id"="SETU_CCDGO")) %>%
filter(dep.EV %in% dependientes.EV.sel) %>%
mutate(dep.EV = reemplzar_nombres_vector(dep.EV,df_nombres_variables)) %>%
ggplot()+
geom_polygon(data = su.f, aes(x= long, y = lat, group = group), fill = "grey60")+
geom_polygon(aes(x= long, y = lat, group = group, fill = factor(valores)))+
coord_equal()+
scale_fill_viridis( name = "deciles",
direction = 1,
discrete = T,
na.value = "grey50",
guide = guide_legend(direction = "horizontal",
label.position = "bottom",
title.position = 'top',
nrow = 1))+
facet_wrap(~dep.EV, nrow = 1)+
tema_lgnd_abajo()
indep.poblacion
dependientes.EV.sel
pintar_corrmatrix_XY(reemplzar_nombres_df(regresion.EV,df_nombres_variables),
x=reemplzar_nombres_vector(indep.poblacion,df_nombres_variables),
y=reemplzar_nombres_vector(dependientes.EV.sel,df_nombres_variables))#+
# labs(title="Pearson entre acceso a EV \ny variables de población")
pintar_corrmatrix_XY(reemplzar_nombres_df(regresion.EV,df_nombres_variables),
x=reemplzar_nombres_vector(indep.poblacion,df_nombres_variables),
y=reemplzar_nombres_vector(dependientes.EV.sel,df_nombres_variables), method_cor = "spearman")#+
# labs(title="Spearman entre acceso a EV \ny variables de población")
indep.predios
nombres_variables_ppales <- c("cobertura_copa.ap","densidad_poblacion","area_copa",
"superior_postgrado",
"ningun_estudio",
"con_alguna_limitacion",
"negro_mulato_afrocolombiano",
"afro.porcentaje",
"con_alguna_limitacion.porcentaje",
"ningun_estudio.porcentaje",
"superior_postgrado.porcentaje",
"cuarto.porcentaje",
"viviendas.porcentaje" ,
"unidad_economica.porcentaje",
"LEA.porcentaje",
"area_ep",
"area_ep.porcentaje",
"apartamento.porcentaje",
"lag.superior_postgrado",
"lag.densidad_poblacion",
"lag.cuarto.porcentaje",
"lag.area_ep",
"ia.areas.dist",
"casa","apartamento","tipo_cuarto","uso_vivienda",
"uso_unidad_economica","uso_LEA","casa.porcentaje")
nombres_reemplazo <- c("cobertura de copa [%]","densidad de población","área de copa",
"con estudios superiores","ningún estudio","con alguna limitación",
"afrocolombianos",
"afrocolombianos [%]",
"con alguna limitación [%]",
"ningun estudio [%]",
"con estudios superiores [%]",
"vivienda tipo cuarto [%]",
"uso de vivienda [%]" ,
"uso de unidad económica [%]",
"uso de LEA [%]",
"área de EV",
"área de EV [%]",
"vivienda tipo apartamento [%]",
"estudios superiores (retardada)",
"densidad de población (retardada)",
"vivienda tipo cuarto [%] (retardada)",
"área de EV (retardada)",
"razón área-distancia",
"vivienda tipo casa","vivienda tipo apartamento","vivienda tipo cuarto","uso de vivienda",
"uso de unidad económica","uso de LEA","vivienda tipo casa [%]")
df_nombres_variables <- data_frame(nombres_variables_ppales,nombres_reemplazo)
pintar_corrmatrix_XY(reemplzar_nombres_df(regresion.EV,df_nombres_variables),
x=reemplzar_nombres_vector(indep.predios,df_nombres_variables),
y=reemplzar_nombres_vector(dependientes.EV.sel,df_nombres_variables))#+
# labs(title="Coeficiente Pearson entre dependiente EV e \nindependientes uso de predios")
pintar_corrmatrix_XY(reemplzar_nombres_df(regresion.EV,df_nombres_variables),
x=reemplzar_nombres_vector(indep.predios,df_nombres_variables),
y=reemplzar_nombres_vector(dependientes.EV.sel,df_nombres_variables), method_cor = "spearman")#+
# labs(title="Coeficiente Spearman entre dependiente EV e \nindependientes uso de predios")
pintar_corrmatrix_XY(regresion.EV,x=indep.estruct, y=dependientes.EV.sel)+
labs(title="Coeficiente Pearson entre dependientes EV e \nindependientes físicas de predios y SU")
indep.estruct
nombres_variables_ppales <- c("cobertura_copa.ap","densidad_poblacion","area_copa",
"superior_postgrado",
"ningun_estudio",
"con_alguna_limitacion",
"negro_mulato_afrocolombiano",
"afro.porcentaje",
"con_alguna_limitacion.porcentaje",
"ningun_estudio.porcentaje",
"superior_postgrado.porcentaje",
"cuarto.porcentaje",
"viviendas.porcentaje" ,
"unidad_economica.porcentaje",
"LEA.porcentaje",
"area_ep",
"area_ep.porcentaje",
"apartamento.porcentaje",
"lag.superior_postgrado",
"lag.densidad_poblacion",
"lag.cuarto.porcentaje",
"lag.area_ep",
"ia.areas.dist",
"casa","apartamento","tipo_cuarto","uso_vivienda",
"uso_unidad_economica","uso_LEA","casa.porcentaje",
"area_media_manzana",
"area_manzanas",
"num_manzanas",
"area_privada",
"area_calle",
"area_publica.porcentaje",
"area_privada.porcentaje",
"area_calle.porcentaje",
"area_su")
nombres_reemplazo <- c("cobertura de copa [%]","densidad de población","área de copa",
"con estudios superiores","ningún estudio","con alguna limitación",
"afrocolombianos",
"afrocolombianos [%]",
"con alguna limitación [%]",
"ningun estudio [%]",
"con estudios superiores [%]",
"vivienda tipo cuarto [%]",
"uso de vivienda [%]" ,
"uso de unidad económica [%]",
"uso de LEA [%]",
"área de EV",
"área de EV [%]",
"vivienda tipo apartamento [%]",
"estudios superiores (retardada)",
"densidad de población (retardada)",
"vivienda tipo cuarto [%] (retardada)",
"área de EV (retardada)",
"razón área-distancia",
"vivienda tipo casa","vivienda tipo apartamento","vivienda tipo cuarto","uso de vivienda",
"uso de unidad económica","uso de LEA","vivienda tipo casa [%]",
"área media de manzana",
"área de manzanas",
"número de manzanas",
"área privada",
"área de las calles",
"área pública [%]",
"área privada [%]",
"área de las calles [%]",
"área del SU")
df_nombres_variables <- data_frame(nombres_variables_ppales,nombres_reemplazo)
pintar_corrmatrix_XY(reemplzar_nombres_df(regresion.EV,df_nombres_variables),
x=reemplzar_nombres_vector(indep.estruct,df_nombres_variables),
y=reemplzar_nombres_vector(dependientes.EV.sel,df_nombres_variables)
)#+
# labs(title="Coeficiente Pearson entre dependientes EV e \nindependientes físicas de predios y SU")
pintar_corrmatrix_XY(reemplzar_nombres_df(regresion.EV,df_nombres_variables),
x=reemplzar_nombres_vector(indep.estruct,df_nombres_variables),
y=reemplzar_nombres_vector(dependientes.EV.sel,df_nombres_variables), method_cor = "spearman")#+
# labs(title="Coeficiente Spearman entre dependientes EV e \nindependientes físicas de predios y SU")
reemplzar_nombres_vector("cuarto.porcentaje",df_nombres_variables) %>%
print()
reemplzar_nombres_vector("unidad_economica.porcentaje",df_nombres_variables)
reemplzar_nombres_vector(indep.estruct,df_nombres_variables)
reemplzar_nombres_vector(dependientes.EV.sel,df_nombres_variables)
reemplzar_nombres_vector(indep.poblacion,df_nombres_variables)
graf<-autoplot(lm.area_ep.ptje.sel, which = 1:4)
# nuevos textos
yLabs <- c("Residuos","Residuos estandarizados",TeX("$\\sqrt{|Residuos estandarizados|}$"),"Distancia de Cook")
xLabs <- c("Valores ajustados", "Cuantiles teóricos", "Valores ajustados", "Índice de la observación")
titulos <- c("Residuos vs Valores Ajustados","Gráfico Q-Q","Gráfico Escala-Locacion","Distancia de Cook")
# modifcar grafico indivudualmente
for (i in 1:4)
graf[i] <- graf[i] + xlab(xLabs[i]) + ylab(yLabs[i])+ggtitle(titulos[i])+theme_minimal(base_size = 9)
# desplegar grafico
title1=grid::textGrob(format(as.formula(lm.area_ep.ptje.sel)) %>% str_c(collapse = "\n"), gp=gpar(fontface="bold",fontsize=8))
grid.arrange( grobs =graf@plots, top=title1)
# sm<-summary(sem.areas_ep)
# t1<-summary(sem.areas_ep)$Coef %>% row.names() %>% str_remove_all(".mxn") %>% str_replace_all("[\\._]"," ") %>% str_replace("\\(Intercept\\)","Intercepto")
# # r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
# # r1<-unname(r1)
# # t2<-rbind(c("$\\lambda$","Likelihood ratio","p-valor"),
# t1 %>% bind_cols(terminos = t1,.) %>%
# knitr::kable(format = formato_render, escape = F, booktabs = T, digits=3,caption = 'Coeficientes del modelo SEM de porcentaje de área de EV', col.names = c("Término","Estimado","Error std.", "t-valor","Pr(>|t|)"))
nombres_coef <- summary(sem.areas_ep)$Coef %>% row.names() %>% str_remove_all(".mxn") %>% reemplzar_nombres_vector(df_nombres_variables) %>% str_replace("\\(Intercept\\)","Intercepto")
t1<-summary(sem.areas_ep)$Coef %>% as_data_frame()
t1 %>% bind_cols(terminos = nombres_coef,.) %>%
kableExtra::kable(format = formato_render,
# booktab = TRUE,
digits=3,
caption = 'Coeficientes del modelo SEM de porcentaje de área de EV' ,
booktabs = TRUE,
col.names = c("Término","Estimado","Error std.","t-valor","Pr(>|t|)"))
# sm<-summary(sem.areas_ep)
# t1<-summary(sem.areas_ep)$Coef %>% row.names() %>% str_remove_all(".mxn") %>% str_replace_all("[\\._]"," ") %>% str_replace("\\(Intercept\\)","Intercepto")
# # r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
# # r1<-unname(r1)
# # t2<-rbind(c("$\\lambda$","Likelihood ratio","p-valor"),
# t1 %>% bind_cols(terminos = t1,.) %>%
# knitr::kable(format = formato_render, escape = F, booktabs = T, digits=3,caption = 'Coeficientes del modelo SEM de porcentaje de área de EV', col.names = c("Término","Estimado","Error std.", "t-valor","Pr(>|t|)"))
nombres_coef <- summary(sem.areas_ep)$Coef %>% row.names() %>% str_remove_all(".mxn") %>% reemplzar_nombres_vector(df_nombres_variables) %>% str_replace("\\(Intercept\\)","Intercepto")
t1<-summary(sem.areas_ep)$Coef %>% as_data_frame()
t1 %>% bind_cols(terminos = nombres_coef,.) %>%
kableExtra::kable(format = formato_render,
# booktab = TRUE,
digits=3,
caption = 'Coeficientes del modelo SEM de porcentaje de área de EV' ,
booktabs = TRUE,
col.names = c("Término","Estimado","Error std.","t-valor","Pr(>|t|)"))
bookdown::render_book("tesis_pdf.Rmd", "bookdown::pdf_book")
pintar_mapa_su_LISA_var(regresion.EV,"area_ep.porcentaje",W_queen.ev, wname = "Wq",nrow =1)
independientes.EV
dependientes.EV
bookdown::render_book("tesis_pdf.Rmd", "bookdown::pdf_book")
