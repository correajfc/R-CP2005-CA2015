diagPlotlaglm<-function(laglm){
require(ggplot2)
model<-myaugment(laglm)
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(alpha=0.6)
p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Fitted values")+ylab("Residuals")
p1<-p1+ggtitle("Residual vs Fitted Plot")+theme_bw()
p2<-  ggplot(model)+stat_qq(aes(sample=.resid))
# geom_abline(intercept = 0, slope = 1, alpha = 0.5)
p2<-p2+xlab("Theoretical Quantiles")+ylab("Residuals")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model)+geom_histogram(aes(.resid,y=..density..), color ="white")+
stat_function(fun=dnorm,
color="red",
args=list(mean=mean(model$.resid),
sd=sd(model$.resid)))
# p3<-p3+geom_density(aes(.resid))
p3<-p3+ggtitle("Histogram .resid")+theme_bw()
return(list(p1, p2, p3))
}
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD"),nrow =5)
diagPlotlaglm<-function(laglm){
require(ggplot2)
model<-myaugment(laglm)
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(alpha=0.6)
p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Valores ajustados")+ylab("Residuos")
p1<-p1+ggtitle("Residuos vs Valores ajustados")+theme_bw()
p2<-  ggplot(model)+stat_qq(aes(sample=.resid))
# geom_abline(intercept = 0, slope = 1, alpha = 0.5)
p2<-p2+xlab("Cuantiles teóricos")+ylab("Residuos")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model)+geom_histogram(aes(.resid,y=..density..), color ="white")+
stat_function(fun=dnorm,
color="red",
args=list(mean=mean(model$.resid),
sd=sd(model$.resid)))
# p3<-p3+geom_density(aes(.resid))
p3<-p3+ggtitle("Histograma residuola")+theme_bw()
return(list(p1, p2, p3))
}
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD"),nrow =5)
diagPlotlaglm<-function(laglm){
require(ggplot2)
model<-myaugment(laglm)
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(alpha=0.6)
p1<-p1+stat_smooth(method="lm")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Valores ajustados")+ylab("Residuos")
p1<-p1+ggtitle("Residuos vs Valores ajustados")+theme_bw()
p2<-  ggplot(model)+stat_qq(aes(sample=.resid))
# geom_abline(intercept = 0, slope = 1, alpha = 0.5)
p2<-p2+xlab("Cuantiles teóricos")+ylab("Residuos")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model)+geom_histogram(aes(.resid,y=..density..), color ="white")+
stat_function(fun=dnorm,
color="red",
args=list(mean=mean(model$.resid),
sd=sd(model$.resid)))
# p3<-p3+geom_density(aes(.resid))
p3<-p3+ggtitle("Histograma residuola")+theme_bw()
return(list(p1, p2, p3))
}
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD"),nrow =5)
diagPlotlaglm<-function(laglm){
require(ggplot2)
model<-myaugment(laglm)
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(alpha=0.6)
p1<-p1+stat_smooth(method="lm")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Valores ajustados")+ylab("Residuos")
p1<-p1+ggtitle("Residuos vs Valores ajustados")+theme_bw()
p2<-  ggplot(model)+stat_qq(aes(sample=.resid))
# geom_abline(intercept = 0, slope = 1, alpha = 0.5)
p2<-p2+xlab("Cuantiles teóricos")+ylab("Residuos")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model)+geom_histogram(aes(.resid,y=..density..), color ="white")+
stat_function(fun=dnorm,
color="red",
args=list(mean=mean(model$.resid),
sd=sd(model$.resid)))
# p3<-p3+geom_density(aes(.resid))
p3<-p3+ggtitle("Histograma  residuos")+
xlab("Residuos")+ylab("Densidad")+theme_bw()
return(list(p1, p2, p3))
}
diagPlotlaglm<-function(laglm){
require(ggplot2)
model<-myaugment(laglm)
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(alpha=0.6)
p1<-p1+stat_smooth(method="lm")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Valores ajustados")+ylab("Residuos")
p1<-p1+ggtitle("Residuos vs Valores ajustados")+theme_bw()
p2<-  ggplot(model)+stat_qq(aes(sample=.resid))
# geom_abline(intercept = 0, slope = 1, alpha = 0.5)
p2<-p2+xlab("Cuantiles teóricos")+ylab("Residuos")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model)+geom_histogram(aes(.resid,y=..density..), color ="white")+
stat_function(fun=dnorm,
color="red",
args=list(mean=mean(model$.resid),
sd=sd(model$.resid)))
# p3<-p3+geom_density(aes(.resid))
p3<-p3+ggtitle("Histograma residuos")+
xlab("Residuos")+ylab("Densidad")+theme_bw()
return(list(p1, p2, p3))
}
diagPltsSEM<-diagPlotlaglm(sem.mod.log.area_copa.wd)
diagPltsSD<-diagPlotlaglm(sd.mod.log.area_copa.wq)
# diagPltsSLX<-diagPlotlaglm(slx.mod.log.area_copa.wq)
diagPltsOLS<-diagPlotlaglm(lm.best.area_copa)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSEM, ncol = 3,left = "SEM"),
arrangeGrob(grobs = diagPltsSD,ncol = 3, left = "SD"),nrow =5)
#SAR
sar.cobertura.ap.wd<-lagsarlm(formula = as.formula(lm.best.cobertura.ap),
data = lm.best.cobertura.ap$model,
listw = W_dist1000.inv,
zero.policy = T,
tol.solve=1.0e-30)
sar.sm<-summary(sar.cobertura.ap.wd,Nagelkerke=T)
sar.sm
# SEM
sem.cobertura.ap.wd<-errorsarlm(formula = as.formula(lm.best.cobertura.ap),
data = lm.best.cobertura.ap$model,
listw = W_dist1000.inv,
zero.policy = T,
tol.solve=1.0e-30)
sem.sm<-summary(sem.cobertura.ap.wd,
Nagelkerke=T)
sem.sm
#SD
sd.cobertura.ap.wd<-lagsarlm(formula = as.formula(lm.best.cobertura.ap),
data = lm.best.cobertura.ap$model,
listw = W_dist1000.inv, zero.policy = T,
tol.solve=1.0e-30,
type = "mixed")
sd.sm<-summary(sd.cobertura.ap.wd,Nagelkerke=T)
sd.sm
# #SLX
# slx.cobertura.ap.wd<-lmSLX(formula = as.formula(lm.best.cobertura.ap),
#                            data = lm.best.cobertura.ap$model,
#                            listw = W_queen,
#                            zero.policy = T)
#
# slx.sm<-summary(slx.cobertura.ap.wd)
# slx.sm
# AIC(slx.cobertura.ap.wd)
tabla<-fitstats_laglm_df(lm.best.cobertura.ap,W_queen) %>%
rename(`OLS`=fitstats) %>%
left_join(fitstats_laglm_df(slx.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SLX`=fitstats) %>%
left_join(fitstats_laglm_df(sar.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SAR`=fitstats) %>%
left_join(fitstats_laglm_df(sem.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SEM`=fitstats) %>%
left_join(fitstats_laglm_df(sd.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SD`=fitstats)
knitr::kable(tabla, digits = 5, caption = "Metricas de ajuste para los modelos de porcentaje de área de copa $W_d$")
tabla<-fitstats_laglm_df(lm.best.cobertura.ap,W_dist1000.inv) %>%
rename(`OLS`=fitstats) %>%
left_join(fitstats_laglm_df(slx.cobertura.ap.wq,W_dist1000.inv),by= "medidasfit") %>%
# rename(`SLX`=fitstats) %>%
#  left_join(fitstats_laglm_df(sar.cobertura.ap.wq,W_dist1000.inv),by= "medidasfit") %>%
rename(`SAR`=fitstats) %>%
left_join(fitstats_laglm_df(sem.cobertura.ap.wq,W_dist1000.inv),by= "medidasfit") %>%
rename(`SEM`=fitstats) %>%
left_join(fitstats_laglm_df(sd.cobertura.ap.wq,W_dist1000.inv),by= "medidasfit") %>%
rename(`SD`=fitstats)
knitr::kable(tabla, digits = 5, caption = "Metricas de ajuste para los modelos de porcentaje de área de copa $W_d$")
tabla<-fitstats_laglm_df(lm.best.cobertura.ap,W_queen) %>%
rename(`OLS`=fitstats) %>%
left_join(fitstats_laglm_df(slx.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
# rename(`SLX`=fitstats) %>%
#  left_join(fitstats_laglm_df(sar.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SAR`=fitstats) %>%
left_join(fitstats_laglm_df(sem.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SEM`=fitstats) %>%
left_join(fitstats_laglm_df(sd.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SD`=fitstats)
knitr::kable(tabla, digits = 5, caption = "Metricas de ajuste para los modelos de porcentaje de área de copa $W_q$")
tabla<-fitstats_laglm_df(lm.best.cobertura.ap,W_dist1000.inv) %>%
rename(`OLS`=fitstats) %>%
left_join(fitstats_laglm_df(slx.cobertura.ap.wd,W_dist1000.inv),by= "medidasfit") %>%
# rename(`SLX`=fitstats) %>%
#  left_join(fitstats_laglm_df(sar.cobertura.ap.wq,W_dist1000.inv),by= "medidasfit") %>%
rename(`SAR`=fitstats) %>%
left_join(fitstats_laglm_df(sem.cobertura.ap.wd,W_dist1000.inv),by= "medidasfit") %>%
rename(`SEM`=fitstats) %>%
left_join(fitstats_laglm_df(sd.cobertura.ap.wd,W_dist1000.inv),by= "medidasfit") %>%
rename(`SD`=fitstats)
tabla<-fitstats_laglm_df(lm.best.cobertura.ap,W_dist1000.inv) %>%
rename(`OLS`=fitstats) %>%
# left_join(fitstats_laglm_df(slx.cobertura.ap.wd,W_dist1000.inv),by= "medidasfit") %>%
# rename(`SLX`=fitstats) %>%
left_join(fitstats_laglm_df(sar.cobertura.ap.wq,W_dist1000.inv),by= "medidasfit") %>%
rename(`SAR`=fitstats) %>%
left_join(fitstats_laglm_df(sem.cobertura.ap.wd,W_dist1000.inv),by= "medidasfit") %>%
rename(`SEM`=fitstats) %>%
left_join(fitstats_laglm_df(sd.cobertura.ap.wd,W_dist1000.inv),by= "medidasfit") %>%
rename(`SD`=fitstats)
knitr::kable(tabla, digits = 5, caption = "Metricas de ajuste para los modelos de porcentaje de área de copa $W_d$")
tabla<-fitstats_laglm_df(lm.best.cobertura.ap,W_queen) %>%
rename(`OLS`=fitstats) %>%
#  left_join(fitstats_laglm_df(slx.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
# rename(`SLX`=fitstats) %>%
left_join(fitstats_laglm_df(sar.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SAR`=fitstats) %>%
left_join(fitstats_laglm_df(sem.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SEM`=fitstats) %>%
left_join(fitstats_laglm_df(sd.cobertura.ap.wq,W_queen),by= "medidasfit") %>%
rename(`SD`=fitstats)
knitr::kable(tabla, digits = 5, caption = "Metricas de ajuste para los modelos de porcentaje de área de copa $W_q$")
tabla<-fitstats_laglm_df(lm.best.cobertura.ap,W_dist1000.inv) %>%
rename(`OLS`=fitstats) %>%
# left_join(fitstats_laglm_df(slx.cobertura.ap.wd,W_dist1000.inv),by= "medidasfit") %>%
# rename(`SLX`=fitstats) %>%
left_join(fitstats_laglm_df(sar.cobertura.ap.wq,W_dist1000.inv),by= "medidasfit") %>%
rename(`SAR`=fitstats) %>%
left_join(fitstats_laglm_df(sem.cobertura.ap.wd,W_dist1000.inv),by= "medidasfit") %>%
rename(`SEM`=fitstats) %>%
left_join(fitstats_laglm_df(sd.cobertura.ap.wd,W_dist1000.inv),by= "medidasfit") %>%
rename(`SD`=fitstats)
knitr::kable(tabla, digits = 5, caption = "Metricas de ajuste para los modelos de porcentaje de área de copa $W_d$")
moran.plot(lm.best.cobertura.ap$residuals,
listw=W_queen,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran SD $W_q$")
moran.plot(lm.best.cobertura.ap$residuals,
listw=W_dist1000.inv,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran SD $W_d$")
moran.plot(sd.cobertura.ap.wq$residuals,
listw=W_queen,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran SD $W_q$")
moran.plot(sd.cobertura.ap.wq$residuals,
listw=W_dist1000.inv,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran SD $W_d$")
moran.plot(lm.best.cobertura.ap$residuals,
listw=W_queen,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran OLS $W_q$")
moran.plot(lm.best.cobertura.ap$residuals,
listw=W_dist1000.inv,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran OLS $W_d$")
moran.plot(sd.cobertura.ap.wq$residuals,
listw=W_queen,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran SD $W_q$")
moran.plot(sd.cobertura.ap.wd$residuals,
listw=W_dist1000.inv,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran SD $W_d$")
diagPltsSD.wq<-diagPlotlaglm(sd.cobertura.ap.wq)
diagPltsSD.wd<-diagPlotlaglm(sd.cobertura.ap.wd)
diagPltsOLS<-diagPlotlaglm(lm.best.cobertura.ap)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSD.wq, ncol = 3,left = "SEM"),
arrangeGrob(grobs = diagPltsSD.wd,ncol = 3, left = "SD"),nrow =5)
diagPltsSD.wq<-diagPlotlaglm(sd.cobertura.ap.wq)
diagPltsSD.wd<-diagPlotlaglm(sd.cobertura.ap.wd)
diagPltsOLS<-diagPlotlaglm(lm.best.cobertura.ap)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSD.wq, ncol = 3,left = "SEM"),
arrangeGrob(grobs = diagPltsSD.wd,ncol = 3, left = "SD"),nrow =5)
diagPltsSD.wq<-diagPlotlaglm(sd.cobertura.ap.wq)
diagPltsSD.wd<-diagPlotlaglm(sd.cobertura.ap.wd)
diagPltsOLS<-diagPlotlaglm(lm.best.cobertura.ap)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSD.wq, ncol = 3,left = "SD $W_q$"),
arrangeGrob(grobs = diagPltsSD.wd,ncol = 3, left = "SD $W_d$"),nrow =5)
sm<-summary(sd.cobertura.ap.wq)
t1<-summary(sd.cobertura.ap.wq)$Coef
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SD de porcentaje de área de copa $W_q$', booktabs = TRUE)
sm<-summary(sd.cobertura.ap.wd)
t1<-summary(sd.cobertura.ap.wd)$Coef
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SD de porcentaje de área de copa $W_d$', booktabs = TRUE)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de porcentaje de área de copa', booktabs = TRUE)
sm<-summary(sd.cobertura.ap.wd)
t1<-summary(sd.cobertura.ap.wd)$Coef
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SD de porcentaje de área de copa $W_d$', booktabs = TRUE)
sm<-summary(sd.cobertura.ap.wq)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de porcentaje de área de copa', booktabs = TRUE)
sm<-summary(sd.cobertura.ap.wq)
t1<-summary(sd.cobertura.ap.wq)$Coef
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SD de porcentaje de área de copa $W_q$', booktabs = TRUE)
sm<-summary(sd.cobertura.ap.wd)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de porcentaje de área de copa', booktabs = TRUE)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
sd.cobertura.ap.wd
sd.cobertura.ap.wd$rho
sd.cobertura.ap.wd$SSE
sd.cobertura.ap.wd$rest.se
sd.cobertura.ap.wd$optimHess
sd.cobertura.ap.wd$LMtest
sd.cobertura.ap.wd$LL
sd.cobertura.ap.wd$parameters
sd.cobertura.ap.wd$opt
sd.cobertura.ap.wd$LL
sd.cobertura.ap.wd$method
sd.cobertura.ap.wd$tarX
sd.cobertura.ap.wd$tary
sd.cobertura.ap.wd$similar
sd.cobertura.ap.wd$interval
sd.cobertura.ap.wd$rho
sd.cobertura.ap.wd$coefficients
sd.cobertura.ap.wd
moran.plot(lm.best.cobertura.ap$residuals,
listw=W_queen,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran OLS Wq")
moran.plot(lm.best.cobertura.ap$residuals,
listw=W_dist1000.inv,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran OLS Wd")
moran.plot(sar.cobertura.ap.wq$residuals,
listw=W_queen,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran SD Wq")
moran.plot(sd.cobertura.ap.wd$residuals,
listw=W_dist1000.inv,
zero.policy = TRUE,
pch=16, col="black",
cex=.5, quiet=T,
labels=as.character(regresion.arboles$SETU_CCDGO),
xlab="residuos sd",
ylab="residuos sd (Spatial Lag)", main="Gráfico de Moran SD Wd")
diagPltsSAR.wq<-diagPlotlaglm(sar.cobertura.ap.wq)
diagPltsSD.wd<-diagPlotlaglm(sd.cobertura.ap.wd)
diagPltsOLS<-diagPlotlaglm(lm.best.cobertura.ap)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSAR.wq, ncol = 3,left = "SD $W_q$"),
arrangeGrob(grobs = diagPltsSD.wd,ncol = 3, left = "SD $W_d$"),nrow =5)
diagPltsSAR.wq<-diagPlotlaglm(sar.cobertura.ap.wq)
diagPltsSD.wd<-diagPlotlaglm(sd.cobertura.ap.wd)
diagPltsOLS<-diagPlotlaglm(lm.best.cobertura.ap)
#diagPlotsAll<-arrangeGrob(grobs = c(diagPltsOLS,diagPltsSLX,diagPltsSD,diagPltsSEM,diagPltsSAR),ncol = 3, nrow = 5)
grid.arrange (arrangeGrob(grobs = diagPltsOLS, ncol = 3,left ="OLS"),
# arrangeGrob(grobs = diagPltsSLX, ncol = 3,left = "SLX"),
# arrangeGrob(grobs = diagPltsSAR, ncol = 3,left =  "SAR"),
arrangeGrob(grobs = diagPltsSAR.wq, ncol = 3,left = "SAR Wq"),
arrangeGrob(grobs = diagPltsSD.wd,ncol = 3, left = "SD Wd"),nrow =5)
sm<-summary(sar.cobertura.ap.wq)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-value"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de porcentaje de área de copa', booktabs = TRUE)
sm<-summary(sd.cobertura.ap.wq)
t1<-summary(sd.cobertura.ap.wq)$Coef
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SD de porcentaje de área de copa $W_q$', booktabs = TRUE)
sm<-summary(sar.cobertura.ap.wq)
t1<-summary(sar.cobertura.ap.wq)$Coef
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SD de porcentaje de área de copa $W_q$', booktabs = TRUE)
sm<-summary(sd.cobertura.ap.wd)
t1<-summary(sd.cobertura.ap.wd)$Coef
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SD de porcentaje de área de copa $W_d$', booktabs = TRUE)
sm<-summary(sd.cobertura.ap.wd)
r1<-round(c(sm$rho,sm$LR1$statistic,sm$LR1$p.value),digits = 3)
r1<-unname(r1)
t2<-rbind(c("$\\rho$","Likelihood ratio","p-valor"),
r1)
knitr::kable(unname(t2), digits=3,caption = 'Coeficiente de autocorrelación modelo SD de porcentaje de área de copa', booktabs = TRUE)
sm<-summary(sar.cobertura.ap.wq)
t1<-summary(sar.cobertura.ap.wq)$Coef
knitr::kable(t1, digits=3,caption = 'Coeficientes del modelo SAR de porcentaje de área de copa $W_q$', booktabs = TRUE)
# Scrip principal para la la ejecución de los .R
#librerias
library(rgdal)
library(rgeos)
library(raster)
library(sp)
library(spdep)
library(car)
library(tidyverse)
library(magrittr)
library(stringr)
library(purrr)
library(reshape2)
library(broom)
library(viridis)
library(RColorBrewer)
library(gridExtra)
library(wesanderson)
library(knitr)
library(bookdown)
library(GGally)
library(ggrepel)
library(grid)
library(ggfortify)
library(olsrr)
library(kableExtra)
library(lmtest)
library(glue)
library(visdat)
library(latex2exp)
load("bck_201811.RData")
sm<-summary(sd.cobertura.ap.wd)
tabla<-fitstats_laglm_df(lm.best.area_copa,W_dist1000.inv) %>%
rename(`OLS`=fitstats) %>%
#  left_join(fitstats_laglm_df(slx.mod.log.area_copa.wd.inv,W_dist1000.inv),by= "medidasfit") %>%
# rename(`SLX`=fitstats) %>%
left_join(fitstats_laglm_df(sar.mod.log.area_copa.wd,W_dist1000.inv),by= "medidasfit") %>%
rename(`SAR`=fitstats) %>%
left_join(fitstats_laglm_df(sem.mod.log.area_copa.wd,W_dist1000.inv),by= "medidasfit") %>%
rename(`SEM`=fitstats) %>%
left_join(fitstats_laglm_df(sd.mod.log.area_copa.wd,W_dist1000.inv),by= "medidasfit") %>%
rename(`SD`=fitstats)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
